python -m django --version
(-m module )

## First step start Project
python -m django startproject project_name

## Second step start app
## Inside 1 app there may be many app

change working directory where manage.py exist
python manage.py startapp app_name # main

# need to create application
# inside folder app_name where manage.py exists
python manage.py startapp app_name # like students

# Every thing that view is 
function
can create multiple function/ View
# Create your views here.
def index(response):
    return  HttpResponse('<h1> This is main </h1>')

# Create new file urls.py inside main
url.py connect the path
from django.shortcuts import render 
from . import view # from view py

# for data base need to student 



# start a new project 
django-admin startproject project_name


## My Sql Data base connection
# settings.py
# Database

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'DB_name',
        'HOST': '127.0.0.1',
        'PORT': '3306',
        'USER': 'DB_user',
        'PASSWORD': 'DB_password',
    }
}

##python manage.py makemigrations
## python manage.py migrate

## My common mistakes in django which causing errors are
-- Folder names not matching django pattern like template instead templates
-- {%  %} typing error 
-- importing views and other path error


[auth]
    changepassword
    createsuperuser
[axes]
    axes_list_attempts
    axes_reset
    axes_reset_ip
    axes_reset_logs
    axes_reset_user
    axes_reset_username
[contenttypes]
  remove_stale_contenttypes
[debug_toolbar]
    debugsqlshell
[django]
    check
    compilemessages
    createcachetable
    dbshell
    diffsettings
    dumpdata
    flush
    inspectdb
    loaddata
    makemessages
    makemigrations
    migrate
    sendtestemail
    shell
    showmigrations
    sqlflush
    sqlmigrate
    sqlsequencereset
    squashmigrations
    startapp
    startproject
    test
    testserver
[sessions]
    clearsessions
[staticfiles]
    collectstatic
    findstatic
    runserver 
 


sudo apt-get update
sudo pat-get install ….
# 
sudo ufw allow 8000
sudo ufw deny 8000
sudo ufw delete allow 8000
sudo ufw allow ‘Nginx Full’
sudo ufw allow ‘OpenSSH”
sudo ufw delete allow from IP
sudo ufw status numbered
sudo ufw delete 1 # number
sudo deny from IP_ADD
sudo ufw status


python manage.py runserver 0.0.0.0:8000
# Testing gunicorn
Gunicorn –bind 0.0.0.0:8000 project.wsgi
# Creating a Gunicorn system service file
Sudo nano /etc/system/system/gunicorn.service


sudo systemctl restart gunicorn
sudo systemctl daemon-reload
sudo nginx -t && sudo systemctl restart nginx
# nginx log files
/var/log/nginx/
